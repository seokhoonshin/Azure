{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "covid19-team7"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"SqlServer5_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer5'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://covid19rp553ihca7bom.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/vm_metrics')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dbo.Covid19_Metrics.parquet",
						"fileSystem": "vm-data"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Country",
						"type": "UTF8"
					},
					{
						"name": "CountryCode",
						"type": "UTF8"
					},
					{
						"name": "Latitude",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 5
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer5')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer5_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/azure-sql-db-data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "country",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "country_azuresql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "metrics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "Confirmed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Confirmed",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Confirmed_Change",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Confirmed_Change",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Deaths",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Deaths",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Deaths_Change",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Deaths_Change",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Recovered",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Recovered",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Recovered_Change",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Recovered_Change",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "ISO2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ISO2",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ISO3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ISO3",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Country_Region",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Country_Region",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "load_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "load_time",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "covidmetrics_azuresql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dates",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DateKey",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FullDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "FullDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "isWeekDay",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "isWeekDay",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "DayOfWeek",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfWeek",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayOfMonth",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfMonth",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayOfQuarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfQuarter",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayOfYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DayName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "WeekOfYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WeekOfYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "WeekName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WeekName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "MonthOfYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MonthOfYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "MonthName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MonthName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CalendarQuarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CalendarQuarter",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "CalendarQuarterName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CalendarQuarterName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CalendarYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CalendarYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalMonth",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FiscalMonth",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalMonthName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FiscalMonthName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FiscalQuarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FiscalQuarter",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalQuarterName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FiscalQuarterName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FiscalYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FiscalYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dates_azuresql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-03T20:52:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/cosmos-db-data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"preferredRegions": []
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['CountryName']"
										},
										"sink": {
											"name": "CountryName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CountryCode']"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['RegionName']"
										},
										"sink": {
											"name": "RegionName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['RegionCode']"
										},
										"sink": {
											"name": "RegionCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Jurisdiction']"
										},
										"sink": {
											"name": "Jurisdiction",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Date']"
										},
										"sink": {
											"name": "Date",
											"type": "Date"
										}
									},
									{
										"source": {
											"path": "$['C1_School closing']"
										},
										"sink": {
											"name": "C1_School_closing",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['C1_Flag']"
										},
										"sink": {
											"name": "C1_Flag",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['C2_Workplace closing']"
										},
										"sink": {
											"name": "C2_Workplace_closing",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['C2_Flag']"
										},
										"sink": {
											"name": "C2_Flag",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['C3_Cancel public events']"
										},
										"sink": {
											"name": "C3_Cancel_public_events",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['C3_Flag']"
										},
										"sink": {
											"name": "C3_Flag",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['C4_Restrictions on gatherings']"
										},
										"sink": {
											"name": "C4_Restrictions_on_gatherings",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['C4_Flag']"
										},
										"sink": {
											"name": "C4_Flag",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['C5_Close public transport']"
										},
										"sink": {
											"name": "C5_Close_public_transport",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['C5_Flag']"
										},
										"sink": {
											"name": "C5_Flag",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['C6_Stay at home requirements']"
										},
										"sink": {
											"name": "C6_Stay_at_home_requirements",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['C6_Flag']"
										},
										"sink": {
											"name": "C6_Flag",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['C7_Restrictions on internal movement']"
										},
										"sink": {
											"name": "C7_Restrictions_on_internal_movement",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['C7_Flag']"
										},
										"sink": {
											"name": "C7_Flag",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['C8_International travel controls']"
										},
										"sink": {
											"name": "C8_International_travel_controls",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['E1_Income support']"
										},
										"sink": {
											"name": "E1_Income_support",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['E1_Flag']"
										},
										"sink": {
											"name": "E1_Flag",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['E2_Debt contract relief']"
										},
										"sink": {
											"name": "E2_Debt_contract_relief",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['E3_Fiscal measures']"
										},
										"sink": {
											"name": "E3_Fiscal_measures",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['E4_International support']"
										},
										"sink": {
											"name": "E4_International_support",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['H1_Public information campaigns']"
										},
										"sink": {
											"name": "H1_Public_information_campaigns",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['H1_Flag']"
										},
										"sink": {
											"name": "H1_Flag",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['H2_Testing policy']"
										},
										"sink": {
											"name": "H2_Testing_policy",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['H3_Contact tracing']"
										},
										"sink": {
											"name": "H3_Contact_tracing",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['H4_Emergency investment in healthcare']"
										},
										"sink": {
											"name": "H4_Emergency_investment_in_healthcare",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['H5_Investment in vaccines']"
										},
										"sink": {
											"name": "H5_Investment_in_vaccines",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['H6_Facial Coverings']"
										},
										"sink": {
											"name": "H6_Facial_Coverings",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['H6_Flag']"
										},
										"sink": {
											"name": "H6_Flag",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['H7_Vaccination policy']"
										},
										"sink": {
											"name": "H7_Vaccination_policy",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['H7_Flag']"
										},
										"sink": {
											"name": "H7_Flag",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['H8_Protection of elderly people']"
										},
										"sink": {
											"name": "H8_Protection_of_elderly_people",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['H8_Flag']"
										},
										"sink": {
											"name": "H8_Flag",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['M1_Wildcard']"
										},
										"sink": {
											"name": "M1_Wildcard",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['StringencyIndex']"
										},
										"sink": {
											"name": "StringencyIndex",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['StringencyIndexForDisplay']"
										},
										"sink": {
											"name": "StringencyIndexForDisplay",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['StringencyLegacyIndex']"
										},
										"sink": {
											"name": "StringencyLegacyIndex",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['StringencyLegacyIndexForDisplay']"
										},
										"sink": {
											"name": "StringencyLegacyIndexForDisplay",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['GovernmentResponseIndex']"
										},
										"sink": {
											"name": "GovernmentResponseIndex",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['GovernmentResponseIndexForDisplay']"
										},
										"sink": {
											"name": "GovernmentResponseIndexForDisplay",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['ContainmentHealthIndex']"
										},
										"sink": {
											"name": "ContainmentHealthIndex",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['ContainmentHealthIndexForDisplay']"
										},
										"sink": {
											"name": "ContainmentHealthIndexForDisplay",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['EconomicSupportIndex']"
										},
										"sink": {
											"name": "EconomicSupportIndex",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['EconomicSupportIndexForDisplay']"
										},
										"sink": {
											"name": "EconomicSupportIndexForDisplay",
											"type": "Double"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_rid']"
										},
										"sink": {
											"name": "_rid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_self']"
										},
										"sink": {
											"name": "_self",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_etag']"
										},
										"sink": {
											"name": "_etag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_attachments']"
										},
										"sink": {
											"name": "_attachments",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['_ts']"
										},
										"sink": {
											"name": "_ts",
											"type": "Double"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "cosmos_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-02T22:21:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer5",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Updated",
						"type": "date"
					},
					{
						"name": "Confirmed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Confirmed_Change",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deaths",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deaths_Change",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recovered",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Recovered_Change",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Latitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "ISO2",
						"type": "varchar"
					},
					{
						"name": "ISO3",
						"type": "varchar"
					},
					{
						"name": "Country_Region",
						"type": "varchar"
					},
					{
						"name": "load_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Covid19_Metrics"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer5",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "CountryCode",
						"type": "varchar"
					},
					{
						"name": "Latitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					},
					{
						"name": "Longitude",
						"type": "decimal",
						"precision": 10,
						"scale": 5
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Country"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer5",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "DateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FullDate",
						"type": "date"
					},
					{
						"name": "isWeekDay",
						"type": "bit"
					},
					{
						"name": "DayOfWeek",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayOfMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayOfQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayOfYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DayName",
						"type": "varchar"
					},
					{
						"name": "WeekOfYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WeekName",
						"type": "varchar"
					},
					{
						"name": "MonthOfYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MonthName",
						"type": "varchar"
					},
					{
						"name": "CalendarQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CalendarQuarterName",
						"type": "varchar"
					},
					{
						"name": "CalendarYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalMonthName",
						"type": "varchar"
					},
					{
						"name": "FiscalQuarter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalQuarterName",
						"type": "varchar"
					},
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dates"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cases_data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "covidmetrics_azuresql",
								"type": "DatasetReference"
							},
							"name": "azuremetrics"
						},
						{
							"dataset": {
								"referenceName": "vm_metrics",
								"type": "DatasetReference"
							},
							"name": "vmmetrics"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "cases_data",
								"type": "DatasetReference"
							},
							"name": "casesdata"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> azuremetrics",
						"source(output(",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet',",
						"     partitionBy('hash', 1)) ~> vmmetrics",
						"azuremetrics, vmmetrics union(byName: true,",
						"     partitionBy('hash', 1))~> union1",
						"union1 select(mapColumn(",
						"          ID,",
						"          Updated,",
						"          Confirmed,",
						"          Confirmed_Change,",
						"          Latitude,",
						"          Longitude,",
						"          ISO2,",
						"          ISO3,",
						"          Country_Region,",
						"          load_time",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['cases.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> casesdata"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/vm_metrics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/deaths_data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "covidmetrics_azuresql",
								"type": "DatasetReference"
							},
							"name": "azuremetrics"
						},
						{
							"dataset": {
								"referenceName": "vm_metrics",
								"type": "DatasetReference"
							},
							"name": "vmmetrics"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "deaths_data",
								"type": "DatasetReference"
							},
							"name": "deathsdata"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet',",
						"     partitionBy('hash', 1)) ~> azuremetrics",
						"source(output(",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet',",
						"     partitionBy('hash', 1)) ~> vmmetrics",
						"azuremetrics, vmmetrics union(byName: true,",
						"     partitionBy('hash', 1))~> union1",
						"union1 select(mapColumn(",
						"          ID,",
						"          Updated,",
						"          Deaths,",
						"          Deaths_Change,",
						"          Latitude,",
						"          Longitude,",
						"          ISO2,",
						"          ISO3,",
						"          Country_Region,",
						"          load_time",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['deaths.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> deathsdata"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/vm_metrics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/recoveries_data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "covidmetrics_azuresql",
								"type": "DatasetReference"
							},
							"name": "azuremetrics"
						},
						{
							"dataset": {
								"referenceName": "vm_metrics",
								"type": "DatasetReference"
							},
							"name": "vmmetrics"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "recoveries_data",
								"type": "DatasetReference"
							},
							"name": "combinedrecoveries"
						}
					],
					"transformations": [
						{
							"name": "union1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet',",
						"     partitionBy('hash', 1)) ~> azuremetrics",
						"source(output(",
						"          ID as integer,",
						"          Updated as date,",
						"          Confirmed as integer,",
						"          Confirmed_Change as integer,",
						"          Deaths as integer,",
						"          Deaths_Change as integer,",
						"          Recovered as integer,",
						"          Recovered_Change as integer,",
						"          Latitude as decimal(10,5),",
						"          Longitude as decimal(10,5),",
						"          ISO2 as string,",
						"          ISO3 as string,",
						"          Country_Region as string,",
						"          load_time as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet',",
						"     partitionBy('hash', 1)) ~> vmmetrics",
						"azuremetrics, vmmetrics union(byName: true,",
						"     partitionBy('hash', 1))~> union1",
						"union1 select(mapColumn(",
						"          ID,",
						"          Updated,",
						"          Recovered,",
						"          Recovered_Change,",
						"          Latitude,",
						"          Longitude,",
						"          ISO2,",
						"          ISO3,",
						"          Country_Region,",
						"          load_time",
						"     ),",
						"     partitionBy('hash', 1),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['recoveries.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> combinedrecoveries"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/vm_metrics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/combined_coviddata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cases data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "cases_data",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"azuremetrics": {},
									"vmmetrics": {},
									"casesdata": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "deaths data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "deaths_data",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"azuremetrics": {},
									"vmmetrics": {},
									"deathsdata": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "recoveries data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "recoveries_data",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"azuremetrics": {},
									"vmmetrics": {},
									"combinedrecoveries": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "policies data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CountryName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CountryName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "RegionName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RegionName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "RegionCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RegionCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Jurisdiction",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Jurisdiction",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "C1_School_closing",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "C1_School_closing",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "C1_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "C1_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "C2_Workplace_closing",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "C2_Workplace_closing",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "C2_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "C2_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "C3_Cancel_public_events",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "C3_Cancel_public_events",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "C3_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "C3_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "C4_Restrictions_on_gatherings",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "C4_Restrictions_on_gatherings",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "C4_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "C4_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "C5_Close_public_transport",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "C5_Close_public_transport",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "C5_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "C5_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "C6_Stay_at_home_requirements",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "C6_Stay_at_home_requirements",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "C6_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "C6_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "C7_Restrictions_on_internal_movement",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "C7_Restrictions_on_internal_movement",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "C7_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "C7_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "C8_International_travel_controls",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "C8_International_travel_controls",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "E1_Income_support",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "E1_Income_support",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "E1_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "E1_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "E2_Debt_contract_relief",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "E2_Debt_contract_relief",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "E3_Fiscal_measures",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "E3_Fiscal_measures",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "E4_International_support",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "E4_International_support",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "H1_Public_information_campaigns",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "H1_Public_information_campaigns",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "H1_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "H1_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "H2_Testing_policy",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "H2_Testing_policy",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "H3_Contact_tracing",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "H3_Contact_tracing",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "H4_Emergency_investment_in_healthcare",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "H4_Emergency_investment_in_healthcare",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "H5_Investment_in_vaccines",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "H5_Investment_in_vaccines",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "H6_Facial_Coverings",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "H6_Facial_Coverings",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "H6_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "H6_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "H7_Vaccination_policy",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "H7_Vaccination_policy",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "H7_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "H7_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "H8_Protection_of_elderly_people",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "H8_Protection_of_elderly_people",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "H8_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "H8_Flag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "M1_Wildcard",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "M1_Wildcard",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "StringencyIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "StringencyIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "StringencyIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "StringencyIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "StringencyLegacyIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "StringencyLegacyIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "StringencyLegacyIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "StringencyLegacyIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "GovernmentResponseIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "GovernmentResponseIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "GovernmentResponseIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "GovernmentResponseIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "ContainmentHealthIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ContainmentHealthIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "ContainmentHealthIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ContainmentHealthIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "EconomicSupportIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "EconomicSupportIndex",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "EconomicSupportIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "EconomicSupportIndexForDisplay",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "_rid",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_rid",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "_self",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_self",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "_etag",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_etag",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "_attachments",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "_attachments",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "_ts",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "_ts",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "cosmos_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "policies",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dates data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dates_azuresql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "combined_dates_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "county data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "country_azuresql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "combined_country_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/cases_data')]",
				"[concat(variables('factoryId'), '/dataflows/deaths_data')]",
				"[concat(variables('factoryId'), '/dataflows/recoveries_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/vm-data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "metrics",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Updated",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "Confirmed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Confirmed",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Confirmed_Change",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Confirmed_Change",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Deaths",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Deaths",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Deaths_Change",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Deaths_Change",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Recovered",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Recovered",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Recovered_Change",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Recovered_Change",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "ISO2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ISO2",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ISO3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ISO3",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Country_Region",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Country_Region",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "load_time",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "load_time",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vm_metrics",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "country",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CountryCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Latitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 10
										},
										"sink": {
											"name": "Longitude",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable5",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vm_country",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dates",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DateKey",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FullDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "FullDate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "isWeekDay",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "isWeekDay",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										}
									},
									{
										"source": {
											"name": "DayOfWeek",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfWeek",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayOfMonth",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfMonth",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayOfQuarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfQuarter",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayOfYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DayOfYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DayName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "WeekOfYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WeekOfYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "WeekName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WeekName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "MonthOfYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MonthOfYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "MonthName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MonthName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CalendarQuarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CalendarQuarter",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "CalendarQuarterName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CalendarQuarterName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CalendarYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CalendarYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalMonth",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FiscalMonth",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalMonthName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FiscalMonthName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FiscalQuarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FiscalQuarter",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalQuarterName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FiscalQuarterName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FiscalYear",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FiscalYear",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable6",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "vm_dates",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-03T20:46:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable4')]",
				"[concat(variables('factoryId'), '/datasets/vm_metrics')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable5')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable6')]"
			]
		}
	]
}